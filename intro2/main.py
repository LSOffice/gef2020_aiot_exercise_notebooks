import matplotlib.pyplot as plt
import numpy as np
from itertools import combinations

#import required packages

landmarks = [[(48, 58), (59, 56), (69, 56), (79, 60), (69, 63), (58, 63)],
[(124, 60), (134, 56), (144, 56), (152, 58), (145, 63), (134, 63)],
[],
[(67, 58), (78, 56), (89, 56), (98, 61), (88, 63), (77, 62)],
[(144, 61), (154, 57), (164, 56), (172, 59), (164, 63), (154, 63)],
[(67, 58), (77, 56), (88, 56), (98, 61), (87, 63), (76, 63)],
[(144, 61), (154, 57), (164, 56), (172, 59), (164, 63), (154, 63)],
[(66, 58), (77, 56), (88, 56), (97, 61), (87, 63), (76, 62)],
[(144, 61), (154, 57), (164, 56), (172, 59), (164, 63), (154, 63)],
[(66, 58), (77, 55), (88, 56), (97, 61), (87, 63), (76, 63)],
[(142, 61), (152, 56), (163, 55), (171, 58), (164, 63), (153, 63)],
[(60, 59), (70, 57), (81, 57), (90, 61), (80, 63), (69, 63)],
[(136, 60), (146, 56), (156, 56), (165, 58), (157, 62), (147, 63)],
[(61, 59), (71, 56), (82, 57), (90, 61), (81, 63), (70, 63)],
[(138, 61), (148, 56), (158, 55), (166, 58), (159, 63), (149, 63)],
[(61, 56), (71, 53), (82, 53), (91, 58), (81, 61), (70, 61)],
[],
[],
[(137, 57), (147, 52), (157, 52), (165, 55), (158, 59), (148, 59)],
[(35, 47), (47, 46), (58, 47), (67, 51), (57, 53), (46, 52)],
[(112, 53), (122, 48), (133, 48), (140, 51), (133, 55), (123, 55)],
[(68, 78), (80, 75), (91, 75), (101, 81), (90, 83), (78, 83)],
[(146, 81), (157, 76), (167, 76), (175, 78), (168, 83), (158, 84)],
[(31, 49), (42, 47), (54, 47), (63, 53), (52, 55), (41, 54)],
[(108, 53), (118, 48), (128, 47), (136, 50), (129, 55), (119, 56)],
[(31, 51), (42, 48), (54, 48), (63, 54), (52, 56), (41, 55)],
[(107, 54), (117, 48), (128, 48), (136, 51), (129, 56), (118, 56)],
[(64, 59), (74, 55), (85, 56), (96, 61), (85, 64), (73, 63)],
[(141, 60), (151, 54), (161, 54), (170, 57), (162, 62), (152, 62)],
[(59, 59), (70, 57), (81, 57), (90, 61), (80, 63), (69, 63)],
[(136, 60), (147, 55), (157, 55), (165, 57), (158, 61), (148, 62)],
[(61, 60), (72, 59), (82, 59), (92, 62), (82, 64), (71, 64)],
[(136, 61), (147, 59), (156, 59), (165, 60), (157, 64), (147, 64)],
[(59, 59), (70, 56), (81, 56), (91, 61), (81, 64), (69, 63)],
[(137, 60), (147, 55), (157, 54), (166, 57), (158, 62), (148, 63)],
[(60, 58), (71, 55), (82, 55), (92, 61), (81, 63), (70, 63)],
[],
[(137, 60), (148, 54), (158, 54), (167, 57), (159, 62), (149, 62)],
[(64, 58), (75, 56), (85, 56), (95, 60), (85, 62), (74, 62)],
[(140, 59), (150, 56), (160, 55), (168, 57), (160, 62), (150, 62)]]
#fill in landmarks

#========Write your code here==========

def distance(pi,pj):
    xi, yi = pi
    xj, yj = pj

    #Euclidean distance
    return ((xi-xj)**2 + (yi-yj)**2)**0.5

def eye_aspect_ratio(lm):
    d15 = distance(lm[1], lm[5])
    d24 = distance(lm[2], lm[4])
    d03 = distance(lm[0], lm[3])
    ear = (d15+d24)/(2*d03)
    return ear

#======================================

ears = [eye_aspect_ratio(lm) for lm in landmarks if bool(lm)]
#Call the functions to calculate the EARs and store them in a list


print('ears =',ears)
plt.title('Eyes aspect ratio vs frames')
plt.ylabel('Eyes aspect ratio')
plt.xlabel('Video frames')
plt.plot(ears)
plt.savefig('ears.jpg')
plt.show()
#Plot the EARs vs frames